---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/bets":
    post:
      summary: create bet
      tags:
      - Bet
      security:
      - bearer: []
      parameters: []
      responses:
        '201':
          description: successful
        '422':
          description: bad request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bet_placement:
                  type: object
                  properties:
                    bet_id:
                      type: integer
                    amount:
                      type: number
              required:
              - bet_placement
        description: Bet List
  "/users/{id}/bets":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list bets
      tags:
      - Bet
      security:
      - bearer: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
  "/sign_up":
    post:
      summary: create registration
      tags:
      - Auth
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
              required:
              - email
              - password
              - ursername
  "/sign_in":
    post:
      summary: create session
      tags:
      - Auth
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/users/leaderboard":
    get:
      summary: leader board
      tags:
      - Users
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        external_id:
          type: string
        username:
          type: string
        email:
          type: string
      example:
        id: 1
        external_id: U1
        username: mike
        email: mike@gmail.com
    Game:
      type: object
      properties:
        id:
          type: integer
        external_id:
          type: string
        home_team:
          type: string
        away_team:
          type: string
        away_score:
          type: integer
        home_score:
          type: integer
        time_elapsed:
          type: integer
      example:
        id: 1
        external_id: G1
        home_team: Team 1
        away_team: Team 2
        away_score: 2
        home_score: 0
        time_elapsed: 70
    Event:
      type: object
      properties:
        id:
          type: integer
        game_id:
          type: integer
        event_type:
          type: string
        for_home:
          type: boolean
        player:
          type: string
        minute:
          type: integer
      example:
        id: 1
        game_id: 1
        event_type: goal
        for_home: true
        player: Player 1
        minute: 50
    Bet:
      type: object
      properties:
        id:
          type: integer
        game_id:
          type: integer
        external_id:
          type: string
        bet_type:
          type: string
        pick:
          type: string
        odd:
          type: decimal
      example:
        id: 1
        game_id: 1
        external_id: B1
        bet_type: winner
        pick: home
        odd: 2.3
    BetPlacement:
      type: object
      properties:
        id: 1
        user_id: 1
        bet_id: 1
        amount: 60
        cashback: 90
        won: false
